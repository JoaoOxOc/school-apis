# you must set worker processes based on your CPU cores, nginx does not benefit from setting more than that
# some last versions calculate it automatically
worker_processes auto; 

# number of file descriptors used for nginx
# the limit for the maximum FDs on the server is usually set by the OS.
# if you don't set FD's then OS settings will be used which is by default 2000
worker_rlimit_nofile 40000;

# only log critical errors
error_log /var/log/nginx/error.log crit;

events {
     # determines how much clients will be served per worker
    # max clients = worker_connections * worker_processes
    # max clients is also limited by the number of socket connections available on the system (~64k)
    worker_connections 8192;

    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll;

    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on;
}

http {
    # these settings allow SSO to send large data through GET HTTP verb
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;
    large_client_header_buffers 4 16k;

    upstream singlesignonpage {
        least_conn;
        # for LB scenarios
        server singlesignonpage:5001;
        #server singlesignonpage_02:80 max_fails=3 fail_timeout=30s;
        
    }
    server {
        listen 5001;
         
        location / {
            proxy_pass http://singlesignonpage;
            proxy_set_header Host $host:5001;
            proxy_set_header X-Forwarded-For $remote_addr;
            fastcgi_buffers 16 16k;
            fastcgi_buffer_size 32k;
        }
    }

    upstream userservice {
        least_conn;
        # for LB scenarios
        server userservice;
        #server userservice_02:80 max_fails=3 fail_timeout=30s;
        
    }
    server {
        listen 5002;

        location / {
            proxy_pass http://userservice;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    }

    upstream identityusermanagement {
        least_conn;
        # for LB scenarios
        server identityusermanagement;
        #server singlesignonpage_02:80 max_fails=3 fail_timeout=30s;
    }
    server {
        listen 4400;
 
        location / {
            proxy_pass http://identityusermanagement;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    }

    upstream identityadminui {
        least_conn;
        # for LB scenarios
        server identityadminui;
        #server identityadminui_02:80 max_fails=3 fail_timeout=30s;
    }
    server {
        listen 4300;
        # access_log  /var/log/nginx/users-access.log  main_ext;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;

        location / {
            proxy_cache STATIC;
            proxy_pass http://identityadminui;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
        }
    }
}